This is The CHAOS MONKEY.  It will kill your processes.

"What kills you, makes you stronger" -- The Chaos Monkey

Start by including the chaos_monkey application amongst your
applications.  The chaos_monkey stays in his cage and eats bananas by
default.  Let it out by running chaos_monkey:on().

KNOWN BUGS: The shell is not properly recognized as a system process.
This leaves two processes for the active shell which can be killed by
the monkey but which really should be protected.


chaos_monkey:find_orphans() -> [Pid]

  The Chaos Monkey smell processes and find the ones which don't have
  the protection of an application.  It gladly hands them over to you
  to do with them as you please.

  KNOWN BUGS: The Chaos Monkey is over-eager and also gives you back
  those two non-system processes which exist for an active shell.


chaos_monkey:on() -> {ok, started} | {error, already_running}
chaos_monkey:off() -> {ok, stopped} | {error, not_running}

  Asynchronous.

  Will let The Chaos Monkey wreck reasonable havoc over time on your
  system.  This is the command to use if you want The Chaos Monkey
  running all the time.

  It will stay away from system processes and supervisors like a good
  monkey.

chaos_monkey:havoc() ->
    {ok, NumberOfKilledProcesses} | {error, Error}
chaos_monkey:havoc(Applications) ->
    {ok, NumberOfKilledProcesses} | {error, Error}
chaos_monkey:havoc(Applications, Protected) ->
    {ok, NumberOfKilledProcesses} | {error, Error}

  Types:

    Applications :: all | all_but_otp | all_but_deps | [application()]
    Protected :: [pid() | registered_name()]
    NumberOfKilledProcesses :: non_neg_integer()
    Error :: term()

  NOT IMPLEMENTED YET

  Synchronous.

  The Chaos Monkey will randomly walk through processes belonging to
  the list of applications and kill everything a couple of times.
  Supervisors are too strong for The Chaos Monkey, so it will kill
  their children instead aiming to kill by going above the restart
  threshold.  The Chaos Monkey is not suicidal so it will respect
  restart thresholds of top level supervisors.

  The Chaos Monkey will stay away from Protected processes (default
  []), which can be protected by name or pid.

  System processes and processes belonging to the kernel application
  are always protected, as is chaos_monkey itself.

  %% It doesn't like seafood nor snails, so the shell is also protected
  %% (NOTE: The Chaos Monkey has a bug and can't recognize shells at the
  %% moment).

  Processes that don't belong to an application or are not part of a
  supervision tree are eaten for lunch.

  Applications decide which applications are available for killing:

    all -- All applications are available for killing.  Only Protected
           processes are safe from The Monkey.

    all_but_otp -- As above, plus stay away from applications in OTP.
                   Default.

    %% all_but_deps -- As above, plus stay away from applications which
    %%                 are only included as dependencies.

    [ListOfApps] -- Sic The Chaos Monkey on the list of application.
                    Remember that the Monkey will always see lonesome
                    processes that don't have the protection of an
                    application as available for harassment.

kill() -> {ok, ProcData}.

  Kills a single random process in your system.

  ProcData contains information about the process that was killed.
